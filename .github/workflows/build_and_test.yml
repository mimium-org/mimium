name: build & test
on:
  push:
      branches:
      - master
      - dev
  pull_request:

jobs:
  prebuild:
    runs-on: ubuntu-latest
    outputs:
      lastmessage: ${{ steps.checkmessage.outputs.lastmessage }}
    steps: 
      - name : GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - if: contains(github.event_name, 'pull_request')      
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - if: "!contains(github.event_name, 'pull_request')"  
        uses: actions/checkout@v2
      - id: checkmessage
        run: |
          git log --no-merges -1 --oneline
          echo "::set-output name=lastmessage::$(git log --no-merges -1 --oneline)"

  build:
    needs: prebuild
    if: "!contains( needs.prebuild.outputs.lastmessage , '[skip ci]')"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-10.15
          - windows-latest
        config:
          - Release
        include:
            - os: ubuntu-20.04
              cxx: /usr/bin/g++-9
              shell: bash
              cmake_args:  -DBUILD_SHARED_LIBS=OFF
            - os: macos-10.15
              cxx: /usr/bin/clang++
              shell: bash
              cmake_args:  -DBUILD_SHARED_LIBS=ON
            - os: windows-latest
              cxx: g++
              shell: msys2 {0}
              cmake_args: -DBUILD_SHARED_LIBS=OFF
    defaults:
      run:
        shell: ${{ matrix.shell }}
    env:
      CXX: ${{matrix.cxx}}
    steps:
      - if: contains(matrix.os, 'windows')
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: git flex bison mingw-w64-x86_64-cmake mingw-w64-x86_64-gcc mingw64/mingw-w64-x86_64-libsndfile mingw64/mingw-w64-x86_64-opus mingw-w64-x86_64-ninja mingw-w64-x86_64-llvm
      - if: contains(matrix.os, 'macos')
        run: |
          HOMEBREW_NO_AUTO_UPDATE=1 brew install flex bison libsndfile llvm ninja
      - if: contains(matrix.os, 'ubuntu')
        run: |
          brew update
          brew info llvm@11
      - if: contains(matrix.os, 'ubuntu')
        run: |
          brew install llvm@11
          sudo apt-get install libalsa-ocaml-dev libfl-dev libbison-dev libz-dev libsndfile-dev libopus-dev gcc-9 ninja-build
      - uses: actions/checkout@v2
        with: 
          submodules: "recursive"
      - name: configure
        run:
          cmake . -Bbuild -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.config }} -DBUILD_TEST=ON ${{ matrix.cmake_args }}
      - name: build
        run: cmake --build build -j --config ${{ matrix.config }} 
      - if: contains(matrix.os, 'macos')
      # currently only on macos
        name: test
        run: cd build && ctest --verbose
